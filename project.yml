---

# Notes:
# Sample project C code is not presently written to produce a release artifact.
# As such, release build options are disabled.
# This sample, therefore, only demonstrates running a collection of unit tests.

:project:
  :use_exceptions: FALSE
  :use_test_preprocessor: TRUE
  :use_auxiliary_dependencies: TRUE
  :build_root: build
#  :release_build: TRUE
#:test_file_prefix: test_
  :test_file_prefix: test
  :which_ceedling: vendor/ceedling
  # :use_mocks: TRUE
  :default_tasks:
    - test:all

#:release_build:
#  :output: MyApp.out
#  :use_assembly: FALSE

:environment:
   - :path:                                 #concatenated with path separator (see special case above)
     - /usr/local/bin/gcc                    #prepend existing PATH with gizmo path
     - "#{ENV['PATH']}" 

:extension:
  :executable: .out
  :source: .c
  :header: .h
  :testpass: .pass
  :testfail: .fail

:paths:
  :test:
    - +:test/**
    - -:test/support
      #- 1_sum/**  
      #- test{a-z}/**
    - +:./**
    - -:./external/**
    - -:./vendor/**
    - -:./ceedling/**
    - -:./cmake-build-debug/**  
    - -:./build/**
    - -:./lib/**
    - -:./linkedlist
    - -:./linkedlistop
    - -:./src
    - -:./testhashtable/**

       #- !ruby/regexp '\/+:test\S+'  
  :source:
    - src/**
    - linkedlist/**  
    - linkedlistop/**  
      #- lib/**  
  :support:
    - test/support
  :include:
    - -:./codechef/**    
    - /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/usr/include/**

:defines:
  # in order to add common defines:
  #  1) remove the trailing [] from the :common: section
  #  2) add entries to the :common: section (e.g. :test: has TEST defined)
  :commmon: &common_defines []
  :test:
    - *common_defines
    - TEST
  :test_preprocess:
    - *common_defines
    - TEST

:cmock:
  :mock_prefix: mock_
  :when_no_prototypes: :warn
  :enforce_strict_ordering: TRUE
  :plugins:
    - :ignore
    - :callback
  :treat_as:
    uint8:    HEX8
    uint16:   HEX16
    uint32:   UINT32
    int8:     INT8
    bool:     UINT8

:gcov:
    :html_report_type: basic

#:tools:
# Ceedling defaults to using gcc for compiling, linking, etc.
# As [:tools] is blank, gcc will be used (so long as it's in your system path)
# See documentation to configure a given toolchain for use

# LIBRARIES
# These libraries are automatically injected into the build process. Those specified as
# common will be used in all types of builds. Otherwise, libraries can be injected in just
# tests or releases. These options are MERGED with the options in supplemental yaml files.
:libraries:
  :placement: :end
  :flag: "${1}"  # or "-L ${1}" for example
  :common: &common_libraries []
  :test:
    - *common_libraries
  :release:
    - *common_libraries

      #:module_generator:
      #  :project_root: ./
      #       #:source_root: src/
      #       #:test_root: test/
      #  :source_root: lib/
      #  :test_root: test/
      #       #:test_root: test/
      #       #
:module_generator:
  :project_root: ./
  #why not work 
  :source_root: .
  :test_root: test/
  #:inc_root: Inc/

:plugins:
  :load_paths:
    - vendor/ceedling/plugins
  :enabled:
    - stdout_pretty_tests_report
    - module_generator
...
